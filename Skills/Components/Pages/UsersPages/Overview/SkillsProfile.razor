@inherits FullComponentBase

<MudTabPanel Text="Compétences" OnClick="@OnClick">
    <MudGrid Justify="Justify.Center" Spacing="0">

        @* User information *@
        <MudItem Class="px-2 px-md-16" xs="12">
            <MudStack Row>
                <HideableBreadcrumb Items="@_breadcrumbs" Class="open-sans" />
                <MudSpacer />
                <MudPaper Class="my-4 px-4 py-3" Elevation="2">
                    <MudStack Row AlignItems="AlignItems.Center">
                        <MudAvatar Color="Color.Dark">@User.Name[0].ToString().ToUpper()</MudAvatar>
                        <MudStack Row="false" Spacing="0">
                            <MudText Class="open-sans-600">@User.Name</MudText>
                            <MudText Class="open-sans-600">@User.Email</MudText>
                            <MudLink Href="@($"tel:{@User.PhoneNumber}")" Color="Color.Inherit">
                                <MudText Class="open-sans-600" Typo="Typo.body2">@User.PhoneNumber</MudText>
                            </MudLink>
                        </MudStack>
                    </MudStack>
                </MudPaper>
            </MudStack>
        </MudItem>

        @* Skills *@
        <MudItem Class="px-2 px-md-16" xs="12">
            <MudDataGrid T="UserSkillModel" Items="@_userSkillsModels" Bordered Hover Outlined Filterable SortMode="SortMode.Multiple" Dense FixedHeader ReadOnly="false"
                         Culture="@Hardcoded.French" Height="65vh" Virtualize OverscanCount="25" QuickFilter="@QuickFilter" EditMode="DataGridEditMode.Cell">
                <ToolBarContent>
                    <MudText Class="open-sans-600">Compétences (attribuées)</MudText>
                    <AuthorizeView Roles="Admin, Manager">
                        <Authorized>
                            <MudTooltip Class="ml-2" Placement="Placement.Bottom" Text="Exporter compétences" Arrow>
                                <MudIconButton Class="ml-4" Style="border-radius: 6px!important; padding: 4px!important;" Icon="@IconsFF.FileExcel" Color="Color.Tertiary" OnClick="@(async() => await ExportSkillsAsync())"/>
                            </MudTooltip>
                            <MudTooltip Class="ml-2" Placement="Placement.Top" Text="Importer des compétences" Arrow>
                                <MudIconButton Class="ml-4" Style="border-radius: 6px!important; padding: 4px!important;" Icon="@IconsF.UploadFile" Color="Color.Secondary" OnClick="@(async() => await ImportSkillsAsync())"/>
                            </MudTooltip>
                            <MudTooltip Class="ml-3" Placement="Placement.Bottom" Text="Gérer les compétences" Arrow>
                                <MudButton Class="ml-6" StartIcon="@IconsF.Checklist" Size="Size.Small"
                                           Color="Color.Tertiary" Variant="Variant.Filled" OnClick="@(async () => await ManageSkillsAsync())">
                                    Attribution
                                </MudButton>
                            </MudTooltip>
                        </Authorized>
                    </AuthorizeView>
                    <MudSpacer/>
                    <MudTextField T="string" @bind-Value="_search" Placeholder="Rechercher" Clearable Adornment="Adornment.Start" AdornmentIcon="@IconsF.Search" Immediate />
                </ToolBarContent>
                <Columns>
                    <HierarchyColumn T="UserSkillModel" />
                    <TemplateColumn Filterable="false" Sortable="false" IsEditable="false" CellStyle="max-width: 50px!important;" CellClass="px-0">
                        <CellTemplate Context="row">
                            <MudStack Justify="Justify.Center" AlignItems="AlignItems.Center">
                                <MudIcon Icon="@IconHelperService.Get(row.Item.Skill!.TypeInfo.Icon, row.Item.Skill.TypeInfo.IconType)" Color="@row.Item.Skill.TypeInfo.IconColor" Size="Size.Small"/>
                            </MudStack>
                        </CellTemplate>
                    </TemplateColumn>
                    <PropertyColumn Title="Catégorie" Property="x => x.Skill!.Category" IsEditable="false" />
                    <PropertyColumn Title="Sous catégorie" Property="x => x.Skill!.SubCategory" IsEditable="false" />
                    <PropertyColumn Title="Description" Property="x => x.Skill!.Description" IsEditable="false" />
                    <AuthorizeView Roles="Admin, Manager">
                        <Authorized>
                            <PropertyColumn Title="Niveau" Property="x => x.Level" IsEditable="false" CellStyle="max-width: 250px!important;" HeaderStyle="max-width: 250px!important;">
                                <CellTemplate Context="row">
                                    <MudSelect T="int" Value="row.Item.Level" ValueChanged="@(async (value) => await LevelChangedAsync(value, row.Item))"
                                               AnchorOrigin="Origin.BottomLeft" TransformOrigin="Origin.TopLeft" DisableUnderLine Immediate Style="margin-top: 0;">
                                        <MudSelectItem Value="0" Style="text-overflow: ellipsis;">
                                            <MudChip Class="bold my-0" Color="Color.Dark" Size="Size.Small">0</MudChip> @_rowSkillLevels[row.Item.SkillId].FirstOrDefault(x => x.Level == 0)?.Value
                                        </MudSelectItem>
                                        <MudSelectItem Value="1" Style="text-overflow: ellipsis;">
                                            <MudChip Class="bold my-0" Color="Color.Dark" Size="Size.Small">1</MudChip> @_rowSkillLevels[row.Item.SkillId].FirstOrDefault(x => x.Level == 1)?.Value
                                        </MudSelectItem>
                                        <MudSelectItem Value="2" Style="text-overflow: ellipsis;">
                                            <MudChip Class="bold my-0" Color="Color.Dark" Size="Size.Small">2</MudChip> @_rowSkillLevels[row.Item.SkillId].FirstOrDefault(x => x.Level == 2)?.Value
                                        </MudSelectItem>
                                        <MudSelectItem Value="3" Style="text-overflow: ellipsis;">
                                            <MudChip Class="bold my-0" Color="Color.Dark" Size="Size.Small">3</MudChip> @_rowSkillLevels[row.Item.SkillId].FirstOrDefault(x => x.Level == 3)?.Value
                                        </MudSelectItem>
                                        <MudSelectItem Value="4" Style="text-overflow: ellipsis;">
                                            <MudChip Class="bold my-0" Color="Color.Dark" Size="Size.Small">4</MudChip> @_rowSkillLevels[row.Item.SkillId].FirstOrDefault(x => x.Level == 4)?.Value
                                        </MudSelectItem>
                                    </MudSelect>
                                </CellTemplate>
                            </PropertyColumn>
                        </Authorized>
                        <NotAuthorized>
                            <PropertyColumn Title="Niveau" Property="x => x.Level" IsEditable="false"/>
                        </NotAuthorized>
                    </AuthorizeView>
                    <AuthorizeView Roles="Admin, Manager">
                        <Authorized>
                            <TemplateColumn Title="Actions" IsEditable="false" Sortable="false" Filterable="false">
                                <CellTemplate Context="row">
                                    <MudStack Row Justify="Justify.Center">
                                        <MudIconButton Class="hover-red" Icon="@IconsF.Delete" Size="Size.Small" OnClick="@(async () => await RevokeSkillAsync(row.Item))"/>
                                    </MudStack>
                                </CellTemplate>
                            </TemplateColumn>
                        </Authorized>
                    </AuthorizeView>
                </Columns>
                <ChildRowContent>
                    <MudStack Row="false" Spacing="0">
                        <MudText Class="bold" GutterBottom>Niveau sélectionné</MudText>
                        <MudStack Class="px-2" Row Spacing="5" AlignItems="AlignItems.Center">
                            @{
                                foreach (var level in _rowSkillLevels[context.Item.SkillId].OrderBy(x => x.Level))
                                {
                                    if (_selectedLevels[context.Item.SkillId] != null && level.Level == _selectedLevels[context.Item.SkillId]!.Level)
                                    {
                                        <MudText Class="open-sans-600 bold" Color="Color.Tertiary">
                                            <MudChip Class="bold" Color="Color.Tertiary" Size="Size.Small">@level.Level</MudChip> @level.Value
                                        </MudText>
                                    }
                                    else
                                    {
                                        <MudText Class="open-sans-600">
                                            <MudChip Class="bold" Size="Size.Small">@level.Level</MudChip> @level.Value
                                        </MudText>
                                    }
                                }
                            }
                        </MudStack>
                    </MudStack>
                </ChildRowContent>
            </MudDataGrid>
        </MudItem>
    </MudGrid>
</MudTabPanel>