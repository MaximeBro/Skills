@page "/skills"
@inherits FullComponentBase

<MudContainer MaxWidth="MaxWidth.ExtraLarge">
    <MudText Class="mt-2 mark-one" Typo="Typo.h2" Align="Align.Center">Compétences</MudText>
    <MudGrid Justify="Justify.Center">
        <MudItem Class="mt-4" xs="12">
            <MudDataGrid T="AbstractSkillModel" Items="_models" Bordered Hover Outlined Filterable Striped SortMode="SortMode.Multiple" Dense FixedHeader
                         Culture="@(new CultureInfo("fr-FR"))" Height="70vh" Virtualize OverscanCount="25" QuickFilter="@QuickFilter">
                <ToolBarContent>
                    <MudSpacer/>
                    <MudTextField T="string" @bind-Value="_search" Immediate Adornment="Adornment.Start" Clearable
                                  AdornmentIcon="@IconsF.Search" Placeholder="Rechercher" Class="flex-grow-0 mr-8 mt-0" Style="width: 400px;"/>
                </ToolBarContent>
                <Columns>
                    <HierarchyColumn T="AbstractSkillModel" />
                    <PropertyColumn Title="Type" Property="x => x.Type"/>
                    <TemplateColumn Title="Catégorie">
                        <CellTemplate>
                            <MudText Typo="Typo.body2">@(context.Item.Category ?? string.Empty)</MudText>
                        </CellTemplate>
                    </TemplateColumn>
                    <TemplateColumn Title="Sous catégorie">
                        <CellTemplate>
                            <MudText Typo="Typo.body2">@(context.Item.SubCategory ?? string.Empty)</MudText>
                        </CellTemplate>
                    </TemplateColumn>
                    <PropertyColumn Title="Description" Property="x => x.Description"/>
                </Columns>
                <ChildRowContent>
                    <MudStack Row="false" Spacing="0">
                        <MudText Style="font-weight: bold;" GutterBottom>Niveaux</MudText>
                        <MudStack Class="px-2" Row="false" Spacing="0">
                            @if (_skillTypeLevels[context.Item.Id].Any())
                            {
                                @foreach (var typeLevel in _skillTypeLevels[context.Item.Id].OrderBy(x => x.Level))
                                {
                                    <MudStack Row Justify="Justify.FlexStart">
                                        <MudText Class="mark-one" Typo="Typo.body2">
                                            <MudChip Size="Size.Small" Style="font-weight: bold!important;">@typeLevel.Level</MudChip> @typeLevel.Value
                                        </MudText>
                                    </MudStack>
                                }
                            }
                            else if (_softSkillTypeLevels[context.Item.Id].Any())
                            {
                                @foreach (var typeLevel in _softSkillTypeLevels[context.Item.Id].OrderBy(x => x.Level))
                                {
                                    <MudStack Row Justify="Justify.FlexStart">
                                        <MudText Class="mark-one" Typo="Typo.body2">
                                            <MudChip Size="Size.Small" Style="font-weight: bold!important;">@typeLevel.Level</MudChip> @typeLevel.Value
                                        </MudText>
                                    </MudStack>
                                }
                            }
                            else
                            {
                                <MudAlert Class="mb-1" Severity="Severity.Normal">Aucun niveau défini pour ce type de compétence.</MudAlert>
                            }
                        </MudStack>
                    </MudStack>
                </ChildRowContent>
            </MudDataGrid>
        </MudItem>
    </MudGrid>
</MudContainer>